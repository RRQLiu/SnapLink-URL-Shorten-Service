openapi: 3.0.3
info:
  title: SnapLink Service API
  version: 1.0.0
  description: |
    This API provides user authentication (register/login/logout), shortlink generation, bulk shortlink creation, retrieval and management of user-created shortlinks, and analytics for shortlinks.

servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/FEILI043_1/shortlink/1.0.0
  - description: Local Development
    url: "/api"
  - description: Production
    url: "https://example.com/api"

tags:
  - name: Auth
    description: User authentication endpoints.
  - name: Shortlinks
    description: "Endpoints for creating, retrieving, and managing shortlinks."
  - name: Analysis
    description: Endpoints for retrieving analytics data of shortlinks.

components:
  schemas:
    CustomShortenUrlRequest:
      type: object
      required:
        - userId
        - longUrl
        - customName
      properties:
        userId:
          type: string
          description: ID of the user creating the custom short URL
        longUrl:
          type: string
          description: Original URL to be shortened
          format: uri
        customName:
          type: string
          description: Custom name for the short URL (max 7 alphanumeric characters)
          maxLength: 7
          pattern: "^[a-zA-Z0-9]*$"
          example: "myurl"

    UserLinksResponse:
      type: object
      properties:
        userId:
          type: string
          description: ID of the user whose links are being retrieved
        links:
          type: array
          items:
            type: object
            properties:
              shortUrl:
                type: string
                description: The shortened URL identifier
              longUrl:
                type: string
                description: The original URL
                format: uri
              creationDate:
                type: string
                description: Date when the URL was created
                format: date
              totalClicks:
                type: integer
                description: Total number of clicks on this URL
              active:
                type: boolean
                description: Whether the URL is currently active
        totalLinks:
          type: integer
          description: Total number of links owned by the user

    ShortenUrlRequest:
      type: object
      required:
        - userId
        - longUrl
      properties:
        userId:
          type: string
          description: ID of the user creating the short URL
        longUrl:
          type: string
          description: Original URL to be shortened
          format: uri
    ShortenUrlResponse:
      type: object
      properties:
        shortUrl:
          type: string
          description: Generated short URL
          format: uri
    UrlAnalyticsResponse:
      type: object
      properties:
        shortUrl:
          type: string
          description: Short URL for which analytics are retrieved
        totalClicks:
          type: integer
          description: Total number of clicks
        clicksByDate:
          type: object
          additionalProperties:
            type: integer
          description: Clicks grouped by date
        clicksByCountry:
          type: object
          additionalProperties:
            type: integer
          description: Clicks grouped by country
        clicksByBrowser:
          type: object
          additionalProperties:
            type: integer
          description: Clicks grouped by browser
    BulkShortenUrlRequest:
      type: object
      required:
        - userId
        - longUrls
      properties:
        userId:
          type: string
          description: ID of the user creating the short URLs
        longUrls:
          type: array
          description: List of original URLs to be shortened (maximum 10)
          maxItems: 10
          items:
            type: string
            format: uri
    BulkShortenUrlResponse:
      type: object
      properties:
        urlMappings:
          type: array
          items:
            type: object
            properties:
              longUrl:
                type: string
                description: Original URL
                format: uri
              shortUrl:
                type: string
                description: Generated short URL
              status:
                type: string
                description: Status of the operation (SUCCESS or FAILED)
                enum: [SUCCESS, FAILED]
              error:
                type: string
                description: Error message if status is FAILED
                nullable: true
        successCount:
          type: integer
          description: Number of successfully shortened URLs
        failureCount:
          type: integer
          description: Number of failed URL shortenings
    LinkMetricsResponse:
      type: object
      properties:
        link:
          type: string
          description: Short URL
        metrics:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                description: Date of metrics
                format: date
              click:
                type: integer
                description: Number of clicks
              country:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Country name
                    count:
                      type: integer
                      description: Click count for country
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    # Placeholder schemas for Auth
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT or similar token
        userId:
          type: string
          description: The user ID
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /custom-shorten:
    post:
      tags:
        - Shortlinks
      summary: Create a custom short URL
      operationId: createCustomShortUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomShortenUrlRequest"
      parameters:
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
          required: false
          description: IP address of the client
        - in: header
          name: User-Agent
          schema:
            type: string
          required: false
          description: User agent of the client
      responses:
        "200":
          description: URL successfully shortened with custom name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortenUrlResponse"
        "400":
          description: Invalid input or custom name already taken
          content:
            application/json:
              schema:
                type: string
                example: "Custom name cannot be empty"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: string
                example: "Unauthorized access"

  /users/{userId}/links:
    get:
      tags:
        - Shortlinks
      summary: Get all shortened URLs for a specific user
      operationId: getUserLinks
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID of the user whose links to retrieve
      responses:
        "200":
          description: Successfully retrieved user's links
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLinksResponse"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
        - bearerAuth: []

  /shorten:
    post:
      tags:
        - Shortlinks
      summary: Create a short URL
      operationId: shortenUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShortenUrlRequest"
      parameters:
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
          required: false
          description: IP address of the client
        - in: header
          name: User-Agent
          schema:
            type: string
          required: false
          description: User agent of the client
      responses:
        "200":
          description: URL successfully shortened
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShortenUrlResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /url/{shortUrl}:
    get:
      tags:
        - Shortlinks
      summary: Redirect to original URL with analytics tracking
      operationId: getOriginalUrl
      parameters:
        - in: path
          name: shortUrl
          required: true
          schema:
            type: string
          description: Short URL identifier
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
          required: false
          description: IP address of the client
      responses:
        "302":
          description: Redirect to original URL
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: Original URL
        "404":
          description: Short URL not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /{shortUrl}:
    get:
      tags:
        - Shortlinks
      summary: Redirect to original URL
      operationId: redirectToOriginalUrl
      parameters:
        - in: path
          name: shortUrl
          required: true
          schema:
            type: string
          description: Short URL identifier
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
          required: false
          description: IP address of the client
        - in: header
          name: User-Agent
          schema:
            type: string
          required: false
          description: User agent of the client
      responses:
        "302":
          description: Redirect to original URL
          headers:
            Location:
              schema:
                type: string
                format: uri
              description: Original URL
        "404":
          description: Short URL not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analytics/{shortUrl}:
    get:
      tags:
        - Analysis
      summary: Get analytics for a short URL
      operationId: getUrlAnalytics
      parameters:
        - in: path
          name: shortUrl
          required: true
          schema:
            type: string
          description: Short URL identifier
        - in: query
          name: startDate
          required: false
          schema:
            type: string
            format: date
          description: Start date for analytics (defaults to 7 days ago)
        - in: query
          name: endDate
          required: false
          schema:
            type: string
            format: date
          description: End date for analytics (defaults to current date)
      responses:
        "200":
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UrlAnalyticsResponse"
        "404":
          description: Short URL not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /bulk-shorten:
    post:
      tags:
        - Shortlinks
      summary: Create multiple short URLs in a single request
      operationId: bulkShortenUrl
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkShortenUrlRequest"
      parameters:
        - in: header
          name: X-Forwarded-For
          schema:
            type: string
          required: false
          description: IP address of the client
        - in: header
          name: User-Agent
          schema:
            type: string
          required: false
          description: User agent of the client
      responses:
        "200":
          description: URLs successfully shortened
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkShortenUrlResponse"
        "400":
          description: Invalid input or too many URLs
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /analysis:
    post:
      tags:
        - Analysis
      summary: Get detailed metrics analysis
      operationId: getAnalysisMetrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - shortUrl
              properties:
                shortUrl:
                  type: string
                  description: Short URL to analyze
                startDate:
                  type: string
                  description: Start date in format YYYYMMDD (defaults to 19000101)
                  pattern: '^\d{8}$'
                endDate:
                  type: string
                  description: End date in format YYYYMMDD (defaults to 20500101)
                  pattern: '^\d{8}$'
      responses:
        "200":
          description: Analysis metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkMetricsResponse"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Short URL not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Newly added Auth paths
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: "Bad request (e.g., email already taken)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/login:
    post:
      tags:
        - Auth
      summary: Login an existing user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /auth/logout:
    post:
      tags:
        - Auth
      summary: Logout the current user
      responses:
        "204":
          description: Successfully logged out
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - bearerAuth: []
